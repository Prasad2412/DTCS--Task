<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="3.0" xmlns:edmx="http://schemas.microsoft.com/ado/2009/11/edmx">
  <!-- EF Runtime content -->
  <edmx:Runtime>
    <!-- SSDL content -->
    <edmx:StorageModels>
    <Schema Namespace="AngularJSModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
        <EntityType Name="City">
          <Key>
            <PropertyRef Name="CityId" />
          </Key>
          <Property Name="CityId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="CityName" Type="nvarchar" MaxLength="150" />
          <Property Name="StateId" Type="int" Nullable="false" />
        </EntityType>
        <EntityType Name="Employee">
          <Key>
            <PropertyRef Name="EmpID" />
          </Key>
          <Property Name="EmpID" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="EmpName" Type="nvarchar" MaxLength="100" />
          <Property Name="DeptName" Type="nvarchar" MaxLength="50" />
          <Property Name="Designation" Type="nvarchar" MaxLength="50" />
          <Property Name="Email" Type="nvarchar" MaxLength="100" />
        </EntityType>
        <EntityType Name="Login">
          <Key>
            <PropertyRef Name="ID" />
          </Key>
          <Property Name="ID" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="Name" Type="varchar" MaxLength="50" />
          <Property Name="Username" Type="varchar" MaxLength="50" />
          <Property Name="Password" Type="varchar" MaxLength="50" />
          <Property Name="Email" Type="varchar" MaxLength="50" />
        </EntityType>
        <EntityType Name="Patient">
          <Key>
            <PropertyRef Name="PatientId" />
          </Key>
          <Property Name="PatientId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="FirstName" Type="nvarchar" MaxLength="250" />
          <Property Name="LastName" Type="nvarchar" MaxLength="250" />
          <Property Name="Gender" Type="nvarchar" MaxLength="250" />
          <Property Name="DateOfBirth" Type="nvarchar" MaxLength="250" />
          <Property Name="State" Type="nvarchar" MaxLength="250" />
          <Property Name="City" Type="nvarchar" MaxLength="250" />
        </EntityType>
        <EntityType Name="State">
          <Key>
            <PropertyRef Name="StateId" />
          </Key>
          <Property Name="StateId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="StateName" Type="nvarchar" MaxLength="150" />
          <Property Name="ShortForm" Type="nvarchar" MaxLength="150" />
        </EntityType>
        <Function Name="CheckDuplicateRecord" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="FirstName" Type="varchar" Mode="In" />
          <Parameter Name="LastName" Type="varchar" Mode="In" />
          <Parameter Name="Gender" Type="varchar" Mode="In" />
          <Parameter Name="State" Type="varchar" Mode="In" />
          <Parameter Name="City" Type="varchar" Mode="In" />
        </Function>
        <Function Name="GetAllRocordForListing" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" />
        <EntityContainer Name="AngularJSModelStoreContainer">
          <EntitySet Name="City" EntityType="Self.City" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="Employee" EntityType="Self.Employee" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="Login" EntityType="Self.Login" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="Patient" EntityType="Self.Patient" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="State" EntityType="Self.State" Schema="dbo" store:Type="Tables" />
        </EntityContainer>
      </Schema></edmx:StorageModels>
    <!-- CSDL content -->
    <edmx:ConceptualModels>
      <Schema Namespace="AngularJSModel" Alias="Self" annotation:UseStrongSpatialTypes="false" xmlns:annotation="http://schemas.microsoft.com/ado/2009/02/edm/annotation" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm">
        <EntityType Name="City">
          <Key>
            <PropertyRef Name="CityId" />
          </Key>
          <Property Name="CityId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="CityName" Type="String" MaxLength="150" FixedLength="false" Unicode="true" />
          <Property Name="StateId" Type="Int32" Nullable="false" />
        </EntityType>
        <EntityType Name="Employee">
          <Key>
            <PropertyRef Name="EmpID" />
          </Key>
          <Property Name="EmpID" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="EmpName" Type="String" MaxLength="100" FixedLength="false" Unicode="true" />
          <Property Name="DeptName" Type="String" MaxLength="50" FixedLength="false" Unicode="true" />
          <Property Name="Designation" Type="String" MaxLength="50" FixedLength="false" Unicode="true" />
          <Property Name="Email" Type="String" MaxLength="100" FixedLength="false" Unicode="true" />
        </EntityType>
        <EntityType Name="Login">
          <Key>
            <PropertyRef Name="ID" />
          </Key>
          <Property Name="ID" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="Name" Type="String" MaxLength="50" FixedLength="false" Unicode="false" />
          <Property Name="Username" Type="String" MaxLength="50" FixedLength="false" Unicode="false" />
          <Property Name="Password" Type="String" MaxLength="50" FixedLength="false" Unicode="false" />
          <Property Name="Email" Type="String" MaxLength="50" FixedLength="false" Unicode="false" />
        </EntityType>
        <EntityType Name="Patient">
          <Key>
            <PropertyRef Name="PatientId" />
          </Key>
          <Property Name="PatientId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="FirstName" Type="String" MaxLength="250" FixedLength="false" Unicode="true" />
          <Property Name="LastName" Type="String" MaxLength="250" FixedLength="false" Unicode="true" />
          <Property Name="Gender" Type="String" MaxLength="250" FixedLength="false" Unicode="true" />
          <Property Name="DateOfBirth" Type="String" MaxLength="250" FixedLength="false" Unicode="true" />
          <Property Name="State" Type="String" MaxLength="250" FixedLength="false" Unicode="true" />
          <Property Name="City" Type="String" MaxLength="250" FixedLength="false" Unicode="true" />
        </EntityType>
        <EntityType Name="State">
          <Key>
            <PropertyRef Name="StateId" />
          </Key>
          <Property Name="StateId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="StateName" Type="String" MaxLength="150" FixedLength="false" Unicode="true" />
          <Property Name="ShortForm" Type="String" MaxLength="150" FixedLength="false" Unicode="true" />
        </EntityType>
        <EntityContainer Name="AngularJSEntities2" annotation:LazyLoadingEnabled="true">
          <EntitySet Name="Cities" EntityType="Self.City" />
          <EntitySet Name="Employees" EntityType="Self.Employee" />
          <EntitySet Name="Logins" EntityType="Self.Login" />
          <EntitySet Name="Patients" EntityType="Self.Patient" />
          <EntitySet Name="States" EntityType="Self.State" />
          <FunctionImport Name="CheckDuplicateRecord" ReturnType="Collection(AngularJSModel.CheckDuplicateRecord_Result)">
            <Parameter Name="FirstName" Mode="In" Type="String" />
            <Parameter Name="LastName" Mode="In" Type="String" />
            <Parameter Name="Gender" Mode="In" Type="String" />
            <Parameter Name="State" Mode="In" Type="String" />
            <Parameter Name="City" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="GetAllRocordForListing" ReturnType="Collection(AngularJSModel.GetAllRocordForListing_Result)" />
        </EntityContainer>
        <ComplexType Name="CheckDuplicateRecord_Result">
          <Property Type="String" Name="FirstName" Nullable="true" MaxLength="250" />
          <Property Type="String" Name="LastName" Nullable="true" MaxLength="250" />
          <Property Type="String" Name="Gender" Nullable="true" MaxLength="250" />
          <Property Type="String" Name="StateName" Nullable="true" MaxLength="150" />
          <Property Type="String" Name="CityName" Nullable="true" MaxLength="150" />
        </ComplexType>
        <ComplexType Name="GetAllRocordForListing_Result">
          <Property Type="Int32" Name="PatientId" Nullable="false" />
          <Property Type="String" Name="FirstName" Nullable="true" MaxLength="250" />
          <Property Type="String" Name="LastName" Nullable="true" MaxLength="250" />
          <Property Type="String" Name="Gender" Nullable="true" MaxLength="250" />
          <Property Type="String" Name="DateOfBirth" Nullable="true" MaxLength="250" />
          <Property Type="Int32" Name="StateId" Nullable="true" />
          <Property Type="String" Name="StateName" Nullable="true" MaxLength="150" />
          <Property Type="Int32" Name="CityId" Nullable="true" />
          <Property Type="String" Name="CityName" Nullable="true" MaxLength="150" />
        </ComplexType>
      </Schema>
    </edmx:ConceptualModels>
    <!-- C-S mapping content -->
    <edmx:Mappings>
      <Mapping Space="C-S" xmlns="http://schemas.microsoft.com/ado/2009/11/mapping/cs">
        <EntityContainerMapping StorageEntityContainer="AngularJSModelStoreContainer" CdmEntityContainer="AngularJSEntities2">
          <EntitySetMapping Name="Cities">
            <EntityTypeMapping TypeName="AngularJSModel.City">
              <MappingFragment StoreEntitySet="City">
                <ScalarProperty Name="CityId" ColumnName="CityId" />
                <ScalarProperty Name="CityName" ColumnName="CityName" />
                <ScalarProperty Name="StateId" ColumnName="StateId" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="Employees">
            <EntityTypeMapping TypeName="AngularJSModel.Employee">
              <MappingFragment StoreEntitySet="Employee">
                <ScalarProperty Name="EmpID" ColumnName="EmpID" />
                <ScalarProperty Name="EmpName" ColumnName="EmpName" />
                <ScalarProperty Name="DeptName" ColumnName="DeptName" />
                <ScalarProperty Name="Designation" ColumnName="Designation" />
                <ScalarProperty Name="Email" ColumnName="Email" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="Logins">
            <EntityTypeMapping TypeName="AngularJSModel.Login">
              <MappingFragment StoreEntitySet="Login">
                <ScalarProperty Name="ID" ColumnName="ID" />
                <ScalarProperty Name="Name" ColumnName="Name" />
                <ScalarProperty Name="Username" ColumnName="Username" />
                <ScalarProperty Name="Password" ColumnName="Password" />
                <ScalarProperty Name="Email" ColumnName="Email" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="Patients">
            <EntityTypeMapping TypeName="AngularJSModel.Patient">
              <MappingFragment StoreEntitySet="Patient">
                <ScalarProperty Name="PatientId" ColumnName="PatientId" />
                <ScalarProperty Name="FirstName" ColumnName="FirstName" />
                <ScalarProperty Name="LastName" ColumnName="LastName" />
                <ScalarProperty Name="Gender" ColumnName="Gender" />
                <ScalarProperty Name="DateOfBirth" ColumnName="DateOfBirth" />
                <ScalarProperty Name="State" ColumnName="State" />
                <ScalarProperty Name="City" ColumnName="City" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="States">
            <EntityTypeMapping TypeName="AngularJSModel.State">
              <MappingFragment StoreEntitySet="State">
                <ScalarProperty Name="StateId" ColumnName="StateId" />
                <ScalarProperty Name="StateName" ColumnName="StateName" />
                <ScalarProperty Name="ShortForm" ColumnName="ShortForm" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <FunctionImportMapping FunctionImportName="CheckDuplicateRecord" FunctionName="AngularJSModel.Store.CheckDuplicateRecord">
            <ResultMapping>
              <ComplexTypeMapping TypeName="AngularJSModel.CheckDuplicateRecord_Result">
                <ScalarProperty Name="FirstName" ColumnName="FirstName" />
                <ScalarProperty Name="LastName" ColumnName="LastName" />
                <ScalarProperty Name="Gender" ColumnName="Gender" />
                <ScalarProperty Name="StateName" ColumnName="StateName" />
                <ScalarProperty Name="CityName" ColumnName="CityName" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetAllRocordForListing" FunctionName="AngularJSModel.Store.GetAllRocordForListing">
            <ResultMapping>
              <ComplexTypeMapping TypeName="AngularJSModel.GetAllRocordForListing_Result">
                <ScalarProperty Name="PatientId" ColumnName="PatientId" />
                <ScalarProperty Name="FirstName" ColumnName="FirstName" />
                <ScalarProperty Name="LastName" ColumnName="LastName" />
                <ScalarProperty Name="Gender" ColumnName="Gender" />
                <ScalarProperty Name="DateOfBirth" ColumnName="DateOfBirth" />
                <ScalarProperty Name="StateId" ColumnName="StateId" />
                <ScalarProperty Name="StateName" ColumnName="StateName" />
                <ScalarProperty Name="CityId" ColumnName="CityId" />
                <ScalarProperty Name="CityName" ColumnName="CityName" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
        </EntityContainerMapping>
      </Mapping>
    </edmx:Mappings>
  </edmx:Runtime>
  <!-- EF Designer content (DO NOT EDIT MANUALLY BELOW HERE) -->
  <Designer xmlns="http://schemas.microsoft.com/ado/2009/11/edmx">
    <Connection>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="MetadataArtifactProcessing" Value="EmbedInOutputAssembly" />
      </DesignerInfoPropertySet>
    </Connection>
    <Options>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="ValidateOnBuild" Value="true" />
        <DesignerProperty Name="EnablePluralization" Value="true" />
        <DesignerProperty Name="IncludeForeignKeysInModel" Value="true" />
        <DesignerProperty Name="UseLegacyProvider" Value="false" />
        <DesignerProperty Name="CodeGenerationStrategy" Value="None" />
      </DesignerInfoPropertySet>
    </Options>
    <!-- Diagram content (shape and connector positions) -->
    <Diagrams></Diagrams>
  </Designer>
</edmx:Edmx>